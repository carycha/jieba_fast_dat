============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.4.2, pluggy-1.6.0
rootdir: /media/ssd100/nfs_data/cary_workspace/github/jieba_fast_dat
configfile: pyproject.toml
testpaths: test
========================================
1. 分词
----------------------------------------
Full Mode: 我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode: 我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
========================================
2. 添加自定义词典/调整词典
----------------------------------------
如果/放到/post/中将/出错/。
494
如果/放到/post/中/将/出错/。
「/台/中/」/正确/应该/不会/被/切开
69
「/台中/」/正确/应该/不会/被/切开
========================================
3. 关键词提取
----------------------------------------
 TF-IDF
----------------------------------------
欧亚 0.7300142700289363
吉林 0.659038184373617
置业 0.4887134522112766
万元 0.3392722481859574
增资 0.33582401985234045
4.3 0.25435675538085106
7000 0.25435675538085106
2013 0.25435675538085106
139.13 0.25435675538085106
实现 0.19900979900382978
综合体 0.19480309624702127
经营范围 0.19389757253595744
亿元 0.1914421623587234
在建 0.17541884768425534
全资 0.17180164988510638
注册资本 0.1712441526
百货 0.16734460041382979
零售 0.1475057117057447
子公司 0.14596045237787234
营业 0.13920178509021275
----------------------------------------
 TextRank
----------------------------------------
吉林 1.0
欧亚 0.9966893354178172
置业 0.6434360313092776
实现 0.5898606692859626
收入 0.43677859947991454
增资 0.4099900531283276
子公司 0.35678295947672795
城市 0.34971383667403655
商业 0.34817220716026936
业务 0.3092230992619838
在建 0.3077929164033088
营业 0.3035777049319588
全资 0.303540981053475
综合体 0.29580869172394825
注册资本 0.29000519464085045
有限公司 0.2807830798576574
零售 0.27883620861218145
百货 0.2781657628445476
开发 0.2693488779295851
经营范围 0.2642762173558316
========================================
4. 词性标注
----------------------------------------
我 r
爱 v
北京 ns
天安门 ns
========================================
6. Tokenize: 返回词语在原文的起止位置
----------------------------------------
 默认模式
----------------------------------------
word 永和		 start: 0 		 end:2
word 服装		 start: 2 		 end:4
word 饰品		 start: 4 		 end:6
word 有限公司		 start: 6 		 end:10
----------------------------------------
 搜索模式
----------------------------------------
word 永和		 start: 0 		 end:2
word 服装		 start: 2 		 end:4
word 饰品		 start: 4 		 end:6
word 有限		 start: 6 		 end:8
word 公司		 start: 8 		 end:10
word 有限公司		 start: 6 		 end:10
又 d
跛 a
又 d
啞 v
===> Thread 1:131667456566976 started
===> Thread 1:131667448174272 started
===> Thread 1:131667439781568 started
===> Thread 1:131667431388864 started
===> Thread 1:131667173131968 started
===> Thread 2:131667164739264 started
===> Thread 2:131667149006528 started
===> Thread 2:131666852968128 started
<=== Thread 1:131667456566976 finished
===> Thread 2:131667456566976 started
===> Thread 2:131666683446976 started
<=== Thread 1:131667431388864 finished
<=== Thread 1:131667439781568 finished
<=== Thread 1:131667173131968 finished
<=== Thread 1:131667448174272 finished
<=== Thread 2:131667164739264 finished
<=== Thread 2:131666852968128 finished
<=== Thread 2:131666683446976 finished
<=== Thread 2:131667456566976 finished
<=== Thread 2:131667149006528 finished
========================================
===> Thread 1:131667149006528 started
===> Thread 1:131667456566976 started
===> Thread 1:131666683446976 started
===> Thread 1:131666852968128 started
<=== Thread 1:131667149006528 finished
===> Thread 1:131667423008448 started
<=== Thread 1:131667456566976 finished
===> Thread 2:131667456566976 started
===> Thread 2:131667149006528 started
<=== Thread 1:131666683446976 finished
===> Thread 2:131667409364672 started
<=== Thread 1:131666852968128 finished
===> Thread 2:131666852968128 started
<=== Thread 1:131667423008448 finished
<=== Thread 2:131667456566976 finished
===> Thread 2:131667423008448 started
<=== Thread 2:131667149006528 finished
<=== Thread 2:131667409364672 finished
<=== Thread 2:131666852968128 finished
<=== Thread 2:131667423008448 finished
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
Full Mode:我/ 来到/ 北京/ 清华/ 清华大学/ 华大/ 大学
Default Mode:我/ 来到/ 北京/ 清华大学
他, 来到, 了, 网易, 杭研, 大厦
小明, 硕士, 毕业, 于, 中国, 科学, 学院, 科学院, 中国科学院, 计算, 计算所, ，, 后, 在, 日本, 京都, 大学, 日本京都大学, 深造
李小福/是/创新办/主任/也/是/云计算/方面/的/专家/;/ /什么/是/八一双鹿/
/例如/我/输入/一个/带/“/韩玉赏鉴/”/的/标题/，/在/自定义/词库/中/也/增加/了/此/词为/N/类/
/「/台中/」/正確/應該/不會/被/切開/。/mac/上/可/分出/「/石墨烯/」/；/此時/又/可以/分出/來/凱特琳/了/。
========================================
李小福 / nr ,  是 / v ,  创新办 / i ,  主任 / b ,  也 / d ,  是 / v ,  云计算 / x ,  方面 / n ,  的 / uj ,  专家 / n ,  ; / x ,    / x ,  什么 / r ,  是 / v ,  八一双鹿 / nz ,  
 / x ,  例如 / v ,  我 / r ,  输入 / v ,  一个 / m ,  带 / v ,  “ / x ,  韩玉赏鉴 / nz ,  ” / x ,  的 / uj ,  标题 / n ,  ， / x ,  在 / p ,  自定义 / l ,  词库 / n ,  中 / f ,  也 / d ,  增加 / v ,  了 / ul ,  此 / r ,  词 / n ,  为 / p ,  N / eng ,  类 / q ,  
 / x ,  「 / x ,  台中 / s ,  」 / x ,  正確 / ad ,  應該 / v ,  不 / d ,  會 / v ,  被 / p ,  切開 / ad ,  。 / x ,  mac / eng ,  上 / f ,  可 / v ,  分出 / v ,  「 / x ,  石墨烯 / x ,  」 / x ,  ； / x ,  此時 / c ,  又 / d ,  可以 / c ,  分出 / v ,  來 / zg ,  凱特琳 / nz ,  了 / ul ,  。 / x ,  
========================================
easy_install/ /is/ /great
python/ /的/正则表达式/是/好用/的
========================================
今天天气/不错
今天天气 Before: 3, After: 0
今天/天气/不错
----------------------------------------
如果/放到/post/中/将/出错/。
中将 Before: 494, After: 494
如果/放到/post/中/将/出错/。
----------------------------------------
我们/中/出/了/一个/叛徒
中出 Before: 3, After: 3
我们/中/出/了/一个/叛徒
----------------------------------------
result of  水果世博园
买<b class="match term0">水果</b>然后来<b class="match term1">世博园</b>
==========
result of  你
second one <b class="match term0">你</b> 中文测试中文 is even more interesting
==========
result of  first
<b class="match term0">first</b> document we’ve added
==========
result of  中文
second one 你 <b class="match term0">中文</b>测试<b class="match term0">中文</b> is even more interesting
==========
result of  交换机
干事每月经过下属科室都要亲口交代24口<b class="match term0">交换机</b>等技术性器件的安装工作
==========
result of  交换
咱俩<b class="match term0">交换</b>一下吧
干事每月经过下属科室都要亲口交代24口<b class="match term0">交换</b>机等技术性器件的安装工作
==========
我
好
朋友
是
李明
我
爱
北京
天安
天安门
ibm
microsoft
dream
intetest
interest
me
lot
result of  水果小姐
==========
result of  你
second one <b class="match term0">你</b> 中文测试中文 is even more interesting
==========
result of  first
<b class="match term0">first</b> document we’ve added
==========
result of  中文
second one 你 <b class="match term0">中文</b>测试<b class="match term0">中文</b> is even more interesting
==========
result of  交换机
干事每月经过下属科室都要亲口交代24口<b class="match term0">交换机</b>等技术性器件的安装工作
==========
result of  交换
咱俩<b class="match term0">交换</b>一下吧
干事每月经过下属科室都要亲口交代24口<b class="match term0">交换</b>机等技术性器件的安装工作
==========
result of  少林
==========
result of  乔峰
==========
collected 16 items

test/jieba_test.py ..........
test/test_change_dictpath.py 这是  一个  伸手不见五指  的  黑夜  。  我  叫  孙悟空  ，  我  爱  北京  ，  我  爱  Python  和  C++  。
我  不  喜欢  日本  和服  。
雷猴  回归  人间  。
工信处  女干事  每月  经过  下属  科室  都  要  亲口  交代  24  口  交换机  等  技术性  器件  的  安装  工作
我  需要  廉租房
永和  服装  饰品  有限公司
我  爱  北京  天安门
abc
隐  马尔可夫
雷猴  是  个  好  网站
.
test/test_file.py cost 0.001992940902709961
speed 59208.980978585954 bytes/second
.
test/test_pos_file.py speed 201272.00976006506  bytes/second
.
test/test_segmentation_pos.py Testing word segmentation for: 我愛北京天安門
Segmented words: ['我', '愛', '北京', '天安', '門']
Testing word segmentation for: 我喜歡 Python 程式設計，版本是 3.9，價格是 $100.50。
Segmented words: ['我', '喜歡', ' ', 'Python', ' ', '程式', '設計', '，', '版本', '是', ' ', '3.9', '，', '價格', '是', ' ', '$', '100.50', '。']
.Testing POS tagging for: 我愛北京天安門
POS tagged words: [pair('我', 'r'), pair('愛', 'v'), pair('北京', 'ns'), pair('天安', 'nz'), pair('門', 'zg')]
Testing POS tagging for: 我喜歡 Python 程式設計，版本是 3.9，價格是 $100.50。
POS tagged words: [pair('我', 'r'), pair('喜歡', 'v'), pair(' ', 'x'), pair('Python', 'eng'), pair(' ', 'x'), pair('程式', 'n'), pair('設計', 'vn'), pair('，', 'x'), pair('版本', 'n'), pair('是', 'v'), pair(' ', 'x'), pair('3.9', 'm'), pair('，', 'x'), pair('價格', 'n'), pair('是', 'v'), pair(' ', 'x'), pair('$', 'x'), pair('100.50', 'm'), pair('。', 'x')]
.
test/test_whoosh_file.py .

============================= 16 passed in 10.36s ==============================
